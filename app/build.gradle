apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.greatimon.roomwordexample"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // 코틀린 표준 라이브러리
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.61"

    // Anko Commons 라이브러리
    implementation "org.jetbrains.anko:anko-commons:0.10.8"
    // appcompat-v7 용 Anko Commons 라이브러리
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:0.10.2"
    // support-v4 용 Anko Commons 라이브러리
    implementation "org.jetbrains.anko:anko-support-v4-commons:0.10.2"
    // minSDK 21 이상 용 Anko Layouts 라이브러리
    implementation "org.jetbrains.anko:anko-sdk21:0.10.2"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // RxBinding
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0"
    // rxbinding-appcompat-v7의 코틀린 확장 라이브러리
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.0.0"

    // 'RxAndroid', 'RxJava'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.12"

    // 안드로이드 아키텍처 컴포넌트
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'

    // 데이터바인딩 컴파일러
    kapt "com.android.databinding:compiler:3.1.4"

    // 코루틴 (coroutine)
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'

    // -------------------------------------------------------------------------------

    // Room components
    implementation "androidx.room:room-runtime:2.2.4"
    implementation "androidx.room:room-ktx:2.2.4"
    kapt "androidx.room:room-compiler:2.2.4"
    androidTestImplementation "androidx.room:room-testing:2.2.4"

    // Lifecycle components
    // implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    // kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    // Coroutines
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // UI
    implementation "com.google.android.material:material:1.1.0"

    // Testing
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
}

androidExtensions {

    // 실험실 기능 활성화
    experimental = true
}

